<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>donorwidgets</artifactId>
	<packaging>war</packaging>
	<name>Orange Leap (Donor Widgets) Project</name>

	<parent>
		<groupId>com.orangeleap</groupId>
		<artifactId>masterPOM</artifactId>
		<version>17.0-SNAPSHOT</version>
		<relativePath/>
	</parent>

	<build>
		<defaultGoal>jetty:run</defaultGoal>
		<testResources>
			<testResource>
				<directory>${basedir}/src/main/webapp/WEB-INF</directory>
				<includes>
					<include>applicationContext*.xml</include>
					<include>contexts/**/*.xml</include>
				</includes>
			</testResource>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>delete old target/classes/app.properties</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete failonerror="false" file="${project.build.outputDirectory}/app.properties" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>jrebel-maven-plugin</artifactId>
                <version>1.0.7</version>
				<dependencies>
			  		<dependency>
					    <groupId>commons-lang</groupId>
					    <artifactId>commons-lang</artifactId>
					    <version>2.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>generate-rebel-xml</id>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>Append CSS and JS file suffixes and set app.properties</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>*********************************************************************</echo>
								<echo>******************** Append CSS and JS file suffixes  ***************</echo>
								<echo>*********************************************************************</echo>

								<move file="${project.build.directory}/${project.artifactId}-${project.version}/css/webtools.css"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/css/webtools-${maven.build.timestamp}.css" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/login.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/login-${maven.build.timestamp}.js" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/customentity.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/customentity-${maven.build.timestamp}.js" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/gifthistory.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/gifthistory-${maven.build.timestamp}.js" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/pledges.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/pledges-${maven.build.timestamp}.js" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/sponsorshipform.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/sponsorshipform-${maven.build.timestamp}.js" overwrite="true" />
								<move file="${project.build.directory}/${project.artifactId}-${project.version}/js/webtools.js"
									tofile="${project.build.directory}/${project.artifactId}-${project.version}/js/webtools-${maven.build.timestamp}.js" overwrite="true" />

								<echo>*********************************************************************</echo>
								<echo>******** Set app.properties to: ${maven.build.timestamp} ************</echo>
								<echo>*********************************************************************</echo>
								<replace file="${project.build.outputDirectory}/app.properties"
									token="$${build.info}" value="${project.version}-${maven.build.timestamp}" />
								<replace file="${project.build.outputDirectory}/app.properties"
									token="$${jsCssSuffix}" value="-${maven.build.timestamp}" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>net.sf.alchim</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<nosuffix>true</nosuffix>
					<jswarn>false</jswarn>
					<nomunge>true</nomunge>
					<aggregations>
						<aggregation>
							<!-- remove files after aggregation (default: false) <removeIncluded>true</removeIncluded> -->
							<!-- insert new line after each concatenation (default: false) -->
							<insertNewLine>true</insertNewLine>
							<output>${basedir}/src/main/webapp/js/webtools.js</output>
							<!-- files to include, path relative to output's directory or absolute 
								path -->
							<includes>
								<include>${basedir}/src/main/webapp/js/jquery/jquery-1.3.2.js</include>
								<include>${basedir}/src/main/webapp/js/extjs/adapter/jquery/ext-jquery-adapter.js</include>
								<include>${basedir}/src/main/webapp/js/extjs/ext-all.js</include>
								<include>${basedir}/src/main/webapp/js/extjs/SuperBoxSelect.js</include>								
							</includes>
							<!-- files to exclude, path relative to output's directory <excludes>
								<exclude>**/*.pack.js</exclude> <exclude>**/compressed.css</exclude> </excludes> -->
						</aggregation>
					</aggregations>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>javarebel-maven-plugin</artifactId>
				<configuration>
					<packaging>war</packaging>
					<classpath>
						<fallback>default</fallback>
						<resources>
							<resource>
								<directory>src/main/resources</directory>
								<excludes>
									<exclude>app.properties</exclude>
								</excludes>
							</resource>
							<resource>
								<directory>target/classes</directory>
							</resource>
							<resource>
								<!-- Empty resource element marks default configuration. -->
							</resource>
						</resources>
					</classpath>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- Does JSP pre-compilation for releases -->
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo.jspc</groupId>
						<artifactId>jspc-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<webXml>${pom.basedir}/target/jspweb.xml</webXml>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>delete webtools.properties</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete failonerror="false"
											file="target/classes/webtools.properties" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!-- Run a Jetty server in place from the source code - no jetty installation 
			or war creation needed -->
		<profile>
			<id>jetty</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>copy webtools.properties</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<copy file="src/main/config/jetty-local/webtools.properties"
											todir="target/classes" filtering="true" overwrite="true" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>set build version and timestamp</id>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<replace file="${project.build.outputDirectory}/app.properties"
											token="$${build.info}" value="${project.version}-${maven.build.timestamp}" />
										<replace file="${project.build.outputDirectory}/app.properties"
											token="$${jsCssSuffix}" value="" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>6.1.11</version>
						<configuration>
							<systemProperties>
								<systemProperty>
									<name>org.mortbay.jetty.Request.maxFormContentSize</name>
									<value>5000000</value>
								</systemProperty>
							</systemProperties>
							<connectors>
								<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
									<port>8080</port>
									<maxIdleTime>3600000</maxIdleTime>
								</connector>
							</connectors>
							<scanIntervalSeconds>5</scanIntervalSeconds>
							<webAppConfig>
								<contextPath>/donorwidgets</contextPath>
							</webAppConfig>


							<jettyEnvXml>${basedir}/src/main/config/jetty-local/jetty-env.xml</jettyEnvXml>
							<contextHandlers>
								<contextHandler implementation="org.mortbay.jetty.webapp.WebAppContext">
									<war>${basedir}/../cas/target/cas-${project.version}.war</war>
									<contextPath>/cas</contextPath>
								</contextHandler>
								<contextHandler implementation="org.mortbay.jetty.webapp.WebAppContext">
									<war>${basedir}/../tangerine/target/tangerine-${project.version}.war</war>
									<contextPath>/orangeleap</contextPath>
								</contextHandler>
							</contextHandlers>

						</configuration>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>${mysql.connector.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Deploy this war to an installed tomcat instance and restart tomcat -->
		<profile>
			<id>tomcat</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>delete webtools.properties</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete failonerror="false"
											file="target/classes/webtools.properties" />
										<delete failonerror="false"
											dir="${tomcat.path}/webapps/donorwidgets" />
										<delete failonerror="false"
											dir="${tomcat.path}/work/Catalina/localhost/donorwidgets" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- http://dpillay.wordpress.com/2009/04/12/maven-cargo-tomcat-auto-deployment/ -->
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<wait>true</wait>
							<container>
								<containerId>tomcat6x</containerId>
								<type>installed</type>
								<timeout>240000</timeout>
								<home>${tomcat.path}</home> <!-- found in $USER_HOME/.m2/settings.xml -->
							</container>
							<deployer>
								<type>installed</type>
								<deployables>
									<deployable>
										<properties>
											<context>donorwidgets</context>
										</properties>
									</deployable>
								</deployables>
							</deployer>
							<configuration>
								<type>existing</type>
								<home>${tomcat.path}</home>
								<properties>
									<cargo.jvmargs>-Xshare:off -Dcatalina.home=${tomcat.path}
										-D${cas.alias} -Dcom.sun.management.jmxremote
										-Dcom.sun.management.jmxremote.ssl=false
										-Dcom.sun.management.jmxremote.authenticate=false
										-Dcom.sun.management.jmxremote.port=8069 -Xdebug
										-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
										-Xms128M -Xmx512m -XX:MaxPermSize=512M</cargo.jvmargs>
								</properties>
							</configuration>
						</configuration>

						<executions>
							<execution>
								<id>verify-deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deployer-deploy</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>clean-undeploy</id>
								<phase>pre-clean</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Deploy this war to an installed tomcat instance; does NOT start tomcat -->
		<profile>
			<id>deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>delete webtools.properties</id>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete failonerror="false"
											file="target/classes/webtools.properties" />
										<delete failonerror="false"
											dir="${tomcat.path}/webapps/donorwidgets" />
										<delete failonerror="false"
											dir="${tomcat.path}/work/Catalina/localhost/donorwidgets" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<wait>true</wait>
							<container>
								<containerId>tomcat6x</containerId>
								<type>installed</type>
								<home>${tomcat.path}</home> <!-- found in $USER_HOME/.m2/settings.xml -->
							</container>
							<deployer>
								<type>installed</type>
								<deployables>
									<deployable>
										<properties>
											<context>donorwidgets</context>
										</properties>
									</deployable>
								</deployables>
							</deployer>
							<configuration>
								<type>existing</type>
								<home>${tomcat.path}</home>
							</configuration>
						</configuration>

						<executions>
							<execution>
								<id>deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deployer-deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Start tomcat -->
		<profile>
			<id>start</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>tomcat6x</containerId>
								<type>installed</type>
								<home>${tomcat.path}</home> <!-- found in $USER_HOME/.m2/settings.xml -->
							</container>
							<deployer>
								<type>installed</type>
								<deployables>
									<deployable>
										<properties>
											<context>donorwidgets</context>
										</properties>
									</deployable>
								</deployables>
							</deployer>
							<configuration>
								<type>existing</type>
								<home>${tomcat.path}</home>
								<properties>
									<cargo.jvmargs>-Xshare:off -Dcatalina.home=${tomcat.path}
										-D${cas.alias} -Dcom.sun.management.jmxremote
										-Dcom.sun.management.jmxremote.ssl=false
										-Dcom.sun.management.jmxremote.authenticate=false
										-Dcom.sun.management.jmxremote.port=8069 -Xdebug
										-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n
										-Xms128M -Xmx512m -XX:MaxPermSize=512M</cargo.jvmargs>
								</properties>
							</configuration>
						</configuration>

						<executions>
							<execution>
								<id>start</id>
								<phase>initialize</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


	</profiles>

	<dependencies>
 		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
		</dependency>
		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>asm-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>axis-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>cache-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>commons-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>jstl-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>slf4j-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>soap-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>spring-integration-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>spring-security-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>spring-webflow-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>spring-ws-dep</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>


		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>orangeleap-common-security</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.orangeleap</groupId>
			<artifactId>jsonView</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aopalliance</groupId>
			<artifactId>com.springsource.org.aopalliance</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
		</dependency>

		<dependency>
			<groupId>org.directwebremoting</groupId>
			<artifactId>dwr</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<exclusions>
			  <exclusion>
			    <groupId>javax.activation</groupId>
			    <artifactId>activation</artifactId>
			  </exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>

		<dependency>
			<groupId>org.antlr</groupId>
			<artifactId>antlr-runtime</artifactId>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<dependency>
			<groupId>javassist</groupId>
			<artifactId>javassist</artifactId>
		</dependency>

		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-archive-browsing</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
		</dependency>

		<dependency>
			<groupId>oro</groupId>
			<artifactId>oro</artifactId>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<!--<scope>compile</scope> -->
		</dependency>

		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.ibatis</groupId>
			<artifactId>ibatis-sqlmap</artifactId>
		</dependency>

		<dependency>
			<groupId>org.opensymphony.quartz</groupId>
			<artifactId>quartz</artifactId>
		</dependency>

		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.json-lib</groupId>
			<artifactId>json-lib</artifactId>
			<classifier>jdk15</classifier>
		</dependency>

		<dependency>
			<groupId>net.sf.ezmorph</groupId>
			<artifactId>ezmorph</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap</artifactId>
			<classifier>all</classifier>
		</dependency>

		<dependency>
			<groupId>org.springmodules</groupId>
			<artifactId>spring-modules-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>ognl</groupId>
			<artifactId>ognl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jasig.cas</groupId>
			<artifactId>cas-client-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2</artifactId>
		</dependency>

        <dependency>
            <groupId>com.orangeleap</groupId>
            <artifactId>jaspersoft-dep</artifactId>
            <type>pom</type>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<exclusions>
			  <exclusion>
			    <groupId>javax.activation</groupId>
			    <artifactId>activation</artifactId>
			  </exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.8.1</version>
		</dependency>

		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>

		<dependency>
			<groupId>xml-security</groupId>
			<artifactId>xmlsec</artifactId>
			<version>1.4.3</version>
		</dependency>

		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-all</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.xbean</groupId>
			<artifactId>xbean-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javamail</artifactId>
			<exclusions>
			  <exclusion>
			    <groupId>javax.activation</groupId>
			    <artifactId>activation</artifactId>
			  </exclusion>
			</exclusions>
		</dependency>
<!--
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
		</dependency>
-->
		<dependency>
			<groupId>com.paymentech.orbital.sdk</groupId>
			<artifactId>paymentechsdk</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.regexp</groupId>
			<artifactId>regexp</artifactId>
		</dependency>

		<dependency>
			<groupId>com.sun.rsajca</groupId>
			<artifactId>sunrasign</artifactId>
		</dependency>

		<dependency>
			<groupId>xmlunit</groupId>
			<artifactId>xmlunit</artifactId>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.packtag</groupId>
			<artifactId>packtag-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.ddlutils</groupId>
			<artifactId>ddlutils</artifactId>
		</dependency>

		<dependency>
			<groupId>velocity</groupId>
			<artifactId>velocity</artifactId>
			<version>1.5</version>
		</dependency>

		<!-- ######################## Provided ONLY below ############################# -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- ######################## TEST ONLY below ############################# -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<classifier>jdk15</classifier>
		</dependency>

		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
