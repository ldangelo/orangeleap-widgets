<project name="donatenow-build" basedir=".." default="usage">

	<property file="${basedir}/build/build.properties" />
	<property file="${commonBuild.dir}/commonBuild.properties"/>
	<tstamp prefix="build" />

	<import file="${commonBuild.dir}/ivyBuild.xml"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${antcontrib.jar}" />
		</classpath>
	</taskdef>
	
	<!-- Integrated targets -->
	<target name="build" depends="resolve, clean-build, setup, compile, setup-war, jar, copy-jars-to-war, build-integrated-war" description="Does a clean build including precompiling JSPs"/>

	<target name="local-unit-build" depends="resolve, setup, compile, jar" description="Used ONLY for local unit test builds"/>
	
	<target name="dirty" depends="resolve, setup, compile, setup-war, jar, copy-jars-to-war, build-integrated-war" description="Does a build of only changed Java files"/>

	<target name="deploy-integrated-war" depends="resolve, setup, compile, setup-war, jar, copy-jars-to-war, fork-optimization-dev, wait-for-optimize-fork-finish-dev,build-integrated-war, copy-donatenow.properties">
		<copy todir="${deploy.path}" file="${stage.dir}/${war.name}.war" />
	</target>

	<target name="deploy-exploded-war" depends="resolve, setup, compile, setup-war, jar, copy-jars-to-war, build-exploded-war, copy-donatenow.properties">
		<copy todir="${deploy.path}/${war.name}">
			<fileset dir="${stage.dir}/${war.name}.war" />
		</copy>
		<delete dir="${stage.dir}/${war.name}.war" quiet="true" />
	</target>
	
	<!-- Singular targets -->
	<target name="setup">
		<echo>Setting up for environment = ${build.env}</echo>

		<mkdir dir="${stage.dir}" />
		<if>
			<equals arg1="${build.env}" arg2="dev" />
			<then>
				<property name="debug.compile" value="true" />
			</then>
			<elseif>
				<equals arg1="${build.env}" arg2="unit-test" />
				<then>
					<property name="debug.compile" value="true" />
				</then>
			</elseif>
			<else>
				<property name="debug.compile" value="false" />
			</else>
		</if>

        <tstamp>
            <format property="now.time" pattern="yyyyMMddkkmm"/>
        </tstamp>
	</target>
	
	<target name="compile">
		<mkdir dir="${classes.dir}" />
		
		<echo>Compiling with debug=${debug.compile}</echo>
		<javac destdir="${classes.dir}" srcdir="${src.dir}" memoryInitialSize="128m" memoryMaximumSize="1024m" fork="true"
			debug="${debug.compile}" classpathref="compile.path"/> <!-- compile.path is set in ivyBuild.xml -->
	</target>
	
	<target name="setup-war">
		<mkdir dir="${stage.dir}/war" />
		<mkdir dir="${stage.dir}/war/META-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF/lib" />
		<mkdir dir="${stage.dir}/war/WEB-INF/classes" />

		<copy todir="${stage.dir}/war" includeemptydirs="true">
			<fileset dir="${war.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<replace file="${stage.dir}/war/login.jsp" token="$${build.version}" value="${build.TODAY}"/>
		<replace file="${stage.dir}/war/login.jsp" token="$${build.time}" value="${build.DSTAMP} ${build.TSTAMP}"/>

		<replace file="${stage.dir}/war/includes/footer.jsp" token="$${build.time}" value="${build.DSTAMP}.${build.TSTAMP}"/>

	</target>

	<target name="jar">
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
			</fileset>
			

			<fileset dir="${config.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml"/>
			</fileset>

		</copy>

		<jar jarfile="${stage.dir}/${app.name}.jar" basedir="${classes.dir}">
			<include name="**/*.class" />
			<include name="**/*.properties" />
			<include name="**/*.xml" />
			<include name="**/*.drl" />
			<include name="**/*.dslr" />
			<include name="**/*.dsl" />
            <include name="**/jaxb.index"/>
			<include name="META-INF/**" />
			<exclude name="**/test/**/*.class" />
		</jar>
		<!--<delete dir="${classes.dir}" />-->
	</target>

	<target name="copy-jars-to-war">
		<copy todir="${stage.dir}/war/WEB-INF/lib">
			<fileset dir="${stage.dir}">
				<include name="${app.name}.jar" />
			</fileset>
		</copy>
		
		<copy todir="${stage.dir}/war/WEB-INF/lib" flatten="true">
		    <path>
				<pathelement path="${war.lib}"/> <!-- war.lib from ivyBuild.xml -->
		    </path>
		</copy>
	</target>

	<target name="build-integrated-war">
		<copy file="${src.dir}/log4j.properties" todir="${stage.dir}/war/WEB-INF"/>

		<war destfile="${stage.dir}/${war.name}.war" basedir="${stage.dir}/war">
			<include name="**/*.*" />
		</war>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="build-exploded-war">
		<delete file="${stage.dir}/${war.name}.war" failonerror="false" />
		<mkdir dir="${stage.dir}/${war.name}.war" />
		<copy todir="${stage.dir}/${war.name}.war">
			<fileset dir="${stage.dir}/war">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="copy-donatenow.properties">
		<!-- Only copy if donatenow.properties does not already exist.  This is necessary to preserve the different values in the different deployment instances -->
		<property name="deploy.lib.dir" location="${deploy.path}/../lib" />
		<available file="${deploy.lib.dir}/dontenow.properties" property="donatenow.properties.present"/>
		<if>
			<equals arg1="${donatenow.properties.present}" arg2="true" />
			<else>
				<copy todir="${deploy.lib.dir}" file="${basedir}/donatenow.properties" />
				<echo message="Copied donatenow.properties to ${deploy.lib.dir}"/>
			</else>
		</if>
	</target>

	<target name="undeploy-war">
		<delete dir="${deploy.path}/${war.name}.war" />
		<delete dir="${deploy.path}/${war.name}" />
		<delete dir="${deploy.path}/../work" quiet="true" />
		<delete dir="${deploy.path}/../temp" quiet="true" />
		<delete>
			<fileset dir="${deploy.path}" includes="${war.name}.war" />
			<fileset dir="${deploy.path}" includes="${war.name}" />
		</delete>
	</target>

	<target name="xapp.synch">
		<echo>Synchronizing App</echo>

		<mkdir dir="${stage.dir}/war" />
		<mkdir dir="${stage.dir}/war/css" />
		<mkdir dir="${stage.dir}/war/js" />

		<copy todir="${stage.dir}/war/css" includeemptydirs="true">
			<fileset dir="${war.dir}/css">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<copy todir="${stage.dir}/war/js" includeemptydirs="true">
			<fileset dir="${war.dir}/js">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<antcall target="optimize-dev"/>

		<sync todir="${deploy.path}/${war.name}/css">
			<fileset dir="${stage.dir}/war/css">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${war.name}/js">
			<fileset dir="${stage.dir}/war/js">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${war.name}/xml">
			<fileset dir="${war.dir}/xml">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${war.name}/images">
			<fileset dir="${war.dir}/images">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${war.name}/WEB-INF/jsp">
			<fileset dir="${war.dir}/WEB-INF/jsp">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<copy todir="${deploy.path}/${war.name}">
			<fileset dir="${war.dir}">
				<include name="*.jsp"/>
			</fileset>
		</copy>

		<delete dir="${stage.dir}/war" />
	</target>

	<target name="jsp.synch">
		<echo>Synchronizing JSPs</echo>

		<sync todir="${deploy.path}/${war.name}/WEB-INF/jsp">
			<fileset dir="${war.dir}/WEB-INF/jsp">
				<include name="**/*.*"/>
			</fileset>
		</sync>
	</target>

		<target name="optimize-dev" depends="resolve">
        <taskdef classname="com.rockstarapps.jslex.ant.CSSOptimization" name="css-optimization">
            <classpath path="${compile.lib}"/>
        </taskdef>

        <css-optimization
            minify="true"
            gZip="true"
            destFile="${stage.dir}/war/css/tangerine.css"
            optimizationLibraryPath="${lib.dir}/jslex-optimization-1.2b.jar"
            verbose="false">

            <!--
                Defines the set of files that will be concatenated and
                then optimized. All the files need to be css files or
                errors will occur.
            -->
            <fileset dir="${stage.dir}/war/css" includes="tablesorter.css" />
            <fileset dir="${stage.dir}/war/css" includes="jquery.tooltip.css" />
            <fileset dir="${stage.dir}/war/css" includes="datePicker.css" />
            <fileset dir="${stage.dir}/war/css" includes="jqModal.css" />
            <fileset dir="${stage.dir}/war/css" includes="jquery.autocomplete.css" />
            <fileset dir="${stage.dir}/war/css" includes="jquery.cluetip.css" />
            <fileset dir="${stage.dir}/war/css" includes="master.css" />
            <fileset dir="${stage.dir}/war/css" includes="navigation.css" />
            <fileset dir="${stage.dir}/war/css" includes="forms.css" />
            <fileset dir="${stage.dir}/war/css" includes="pages.css" />
            <fileset dir="${stage.dir}/war/js/extjs/resources/css" includes="ext-all.css" />
            <fileset dir="${stage.dir}/war/js/extjs/resources/css/ux/treeGrid" includes="treeGrid.css" />
            <fileset dir="${stage.dir}/war/css" includes="orange-theme.css" />
            <fileset dir="${stage.dir}/war/css" includes="ext-styles.css" />
        </css-optimization>

        <taskdef classname="com.rockstarapps.jslex.ant.JavaScriptOptimization" name="javascript-optimization">
            <classpath path="${compile.lib}"/>
        </taskdef>

<!--        <javascript-optimization
            minify="false"
            yCompressor="false"
            gZip="false"
            destFile="${stage.dir}/war/js/tangerine.js.ycomp.js"
            optimizationLibraryPath="${lib.dir}/jslex-optimization-1.2b.jar"
            verbose="false">


            <fileset dir="${stage.dir}/war/js" includes="jquery/jquery-1.3.2.min.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ext-jquery-adapter.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ext-all-debug.js" />
            <fileset dir="${stage.dir}/war/js" includes="persist/gears_init.js" />
            <fileset dir="${stage.dir}/war/js" includes="persist/swfobject.js" />
            <fileset dir="${stage.dir}/war/js" includes="persist/persist.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/PersistStateProvider.js" />
            <fileset dir="${stage.dir}/war/js" includes="init.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ext-ajax-queue.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/RowExpander.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/TreeGrid.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.bgiframe.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.hoverIntent.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.cluetip.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.selectboxes.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jqModal.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jqDnR.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.numeric.pack.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.fade.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.ajaxQueue.js" />
            <fileset dir="${stage.dir}/war/js" includes="jquery/plugins/jquery.autocomplete.js" />
            <fileset dir="${stage.dir}/war/js" includes="date.js" />
        </javascript-optimization>

        <javascript-optimization
            minify="false"
            yCompressor="false"
            gZip="false"
            destFile="${stage.dir}/war/js/tangerine-admin.js.ycomp.js"
            optimizationLibraryPath="${lib.dir}/jslex-optimization-1.2b.jar"
            verbose="false">


            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/CheckColumn.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/filters/GridFilters.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/filters/Filter.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/filters/StringFilter.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/filters/BooleanFilter.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/grid/GridDropTarget.js" />
            <fileset dir="${stage.dir}/war/js" includes="extjs/ux/grid/RowGrip.js" />
        </javascript-optimization>
-->			
	</target>

    <target name="fork-optimization-dev">
        <java classname="org.apache.tools.ant.launch.Launcher"
            fork="true"
            failonerror="true"
            dir="${build.dir}"
            timeout="900000"
            taskname="startAnt" maxmemory="2048m">
            <classpath>
                <pathelement location="${ant.home}/lib/ant-launcher.jar"/>
            </classpath>
            <arg value="-buildfile"/>
            <arg file="${build.dir}/donatenow-build.xml"/>
            <arg value="-Dbasedir=${basedir}"/>
            <arg value="-Dnow.time=${now.time}"/>
            <arg value="-Ddebug.compile=${debug.compile}"/>
            <arg value="-DcommonBuild.dir=${commonBuild.dir}"/>
            <arg value="optimize-dev"/>
        </java>
    </target>
	
	<target name="wait-for-optimize-fork-finish-dev">
	        <waitfor maxwait="10" maxwaitunit="minute" checkevery="10" checkeveryunit="second">
	            <available file="${stage.dir}/war/css/tangerine.css.min.css"/>
	        </waitfor>
	 </target>
</project>