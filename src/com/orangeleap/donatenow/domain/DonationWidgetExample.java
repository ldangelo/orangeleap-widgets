package com.orangeleap.donatenow.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DonationWidgetExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public DonationWidgetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected DonationWidgetExample(DonationWidgetExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table DONATION_WIDGET
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andDonationWidgetIdIsNull() {
            addCriterion("DONATION_WIDGET_ID is null");
            return this;
        }

        public Criteria andDonationWidgetIdIsNotNull() {
            addCriterion("DONATION_WIDGET_ID is not null");
            return this;
        }

        public Criteria andDonationWidgetIdEqualTo(Long value) {
            addCriterion("DONATION_WIDGET_ID =", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdNotEqualTo(Long value) {
            addCriterion("DONATION_WIDGET_ID <>", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdGreaterThan(Long value) {
            addCriterion("DONATION_WIDGET_ID >", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdGreaterThanOrEqualTo(Long value) {
            addCriterion("DONATION_WIDGET_ID >=", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdLessThan(Long value) {
            addCriterion("DONATION_WIDGET_ID <", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdLessThanOrEqualTo(Long value) {
            addCriterion("DONATION_WIDGET_ID <=", value, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdIn(List<Long> values) {
            addCriterion("DONATION_WIDGET_ID in", values, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdNotIn(List<Long> values) {
            addCriterion("DONATION_WIDGET_ID not in", values, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdBetween(Long value1, Long value2) {
            addCriterion("DONATION_WIDGET_ID between", value1, value2, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWidgetIdNotBetween(Long value1, Long value2) {
            addCriterion("DONATION_WIDGET_ID not between", value1, value2, "donationWidgetId");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeIsNull() {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE is null");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeIsNotNull() {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE is not null");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeEqualTo(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE =", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeNotEqualTo(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE <>", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeGreaterThan(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE >", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeGreaterThanOrEqualTo(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE >=", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeLessThan(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE <", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeLessThanOrEqualTo(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE <=", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeLike(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE like", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeNotLike(String value) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE not like", value, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeIn(List<String> values) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE in", values, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeNotIn(List<String> values) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE not in", values, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeBetween(String value1, String value2) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE between", value1, value2, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWindowMotivationCodeNotBetween(String value1, String value2) {
            addCriterion("DONATION_WINDOW_MOTIVATION_CODE not between", value1, value2, "donationWindowMotivationCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeIsNull() {
            addCriterion("DONATION_WIDGET_PROJECT_CODE is null");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeIsNotNull() {
            addCriterion("DONATION_WIDGET_PROJECT_CODE is not null");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeEqualTo(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE =", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeNotEqualTo(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE <>", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeGreaterThan(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE >", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeGreaterThanOrEqualTo(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE >=", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeLessThan(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE <", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeLessThanOrEqualTo(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE <=", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeLike(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE like", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeNotLike(String value) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE not like", value, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeIn(List<String> values) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE in", values, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeNotIn(List<String> values) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE not in", values, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeBetween(String value1, String value2) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE between", value1, value2, "donationWidgetProjectCode");
            return this;
        }

        public Criteria andDonationWidgetProjectCodeNotBetween(String value1, String value2) {
            addCriterion("DONATION_WIDGET_PROJECT_CODE not between", value1, value2, "donationWidgetProjectCode");
            return this;
        }
    }
}