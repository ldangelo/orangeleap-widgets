package com.orangeleap.webtools.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PlacementsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public PlacementsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected PlacementsExample(PlacementsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table PLACEMENTS
     *
     * @ibatorgenerated Tue Jun 08 15:31:29 CDT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPlacementIdIsNull() {
            addCriterion("PLACEMENT_ID is null");
            return this;
        }

        public Criteria andPlacementIdIsNotNull() {
            addCriterion("PLACEMENT_ID is not null");
            return this;
        }

        public Criteria andPlacementIdEqualTo(Long value) {
            addCriterion("PLACEMENT_ID =", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdNotEqualTo(Long value) {
            addCriterion("PLACEMENT_ID <>", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdGreaterThan(Long value) {
            addCriterion("PLACEMENT_ID >", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PLACEMENT_ID >=", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdLessThan(Long value) {
            addCriterion("PLACEMENT_ID <", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdLessThanOrEqualTo(Long value) {
            addCriterion("PLACEMENT_ID <=", value, "placementId");
            return this;
        }

        public Criteria andPlacementIdIn(List<Long> values) {
            addCriterion("PLACEMENT_ID in", values, "placementId");
            return this;
        }

        public Criteria andPlacementIdNotIn(List<Long> values) {
            addCriterion("PLACEMENT_ID not in", values, "placementId");
            return this;
        }

        public Criteria andPlacementIdBetween(Long value1, Long value2) {
            addCriterion("PLACEMENT_ID between", value1, value2, "placementId");
            return this;
        }

        public Criteria andPlacementIdNotBetween(Long value1, Long value2) {
            addCriterion("PLACEMENT_ID not between", value1, value2, "placementId");
            return this;
        }

        public Criteria andWidgetIdIsNull() {
            addCriterion("WIDGET_ID is null");
            return this;
        }

        public Criteria andWidgetIdIsNotNull() {
            addCriterion("WIDGET_ID is not null");
            return this;
        }

        public Criteria andWidgetIdEqualTo(Long value) {
            addCriterion("WIDGET_ID =", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdNotEqualTo(Long value) {
            addCriterion("WIDGET_ID <>", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdGreaterThan(Long value) {
            addCriterion("WIDGET_ID >", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdGreaterThanOrEqualTo(Long value) {
            addCriterion("WIDGET_ID >=", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdLessThan(Long value) {
            addCriterion("WIDGET_ID <", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdLessThanOrEqualTo(Long value) {
            addCriterion("WIDGET_ID <=", value, "widgetId");
            return this;
        }

        public Criteria andWidgetIdIn(List<Long> values) {
            addCriterion("WIDGET_ID in", values, "widgetId");
            return this;
        }

        public Criteria andWidgetIdNotIn(List<Long> values) {
            addCriterion("WIDGET_ID not in", values, "widgetId");
            return this;
        }

        public Criteria andWidgetIdBetween(Long value1, Long value2) {
            addCriterion("WIDGET_ID between", value1, value2, "widgetId");
            return this;
        }

        public Criteria andWidgetIdNotBetween(Long value1, Long value2) {
            addCriterion("WIDGET_ID not between", value1, value2, "widgetId");
            return this;
        }

        public Criteria andPlacementUrlIsNull() {
            addCriterion("PLACEMENT_URL is null");
            return this;
        }

        public Criteria andPlacementUrlIsNotNull() {
            addCriterion("PLACEMENT_URL is not null");
            return this;
        }

        public Criteria andPlacementUrlEqualTo(String value) {
            addCriterion("PLACEMENT_URL =", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlNotEqualTo(String value) {
            addCriterion("PLACEMENT_URL <>", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlGreaterThan(String value) {
            addCriterion("PLACEMENT_URL >", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlGreaterThanOrEqualTo(String value) {
            addCriterion("PLACEMENT_URL >=", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlLessThan(String value) {
            addCriterion("PLACEMENT_URL <", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlLessThanOrEqualTo(String value) {
            addCriterion("PLACEMENT_URL <=", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlLike(String value) {
            addCriterion("PLACEMENT_URL like", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlNotLike(String value) {
            addCriterion("PLACEMENT_URL not like", value, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlIn(List<String> values) {
            addCriterion("PLACEMENT_URL in", values, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlNotIn(List<String> values) {
            addCriterion("PLACEMENT_URL not in", values, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlBetween(String value1, String value2) {
            addCriterion("PLACEMENT_URL between", value1, value2, "placementUrl");
            return this;
        }

        public Criteria andPlacementUrlNotBetween(String value1, String value2) {
            addCriterion("PLACEMENT_URL not between", value1, value2, "placementUrl");
            return this;
        }

        public Criteria andErrorCountIsNull() {
            addCriterion("ERROR_COUNT is null");
            return this;
        }

        public Criteria andErrorCountIsNotNull() {
            addCriterion("ERROR_COUNT is not null");
            return this;
        }

        public Criteria andErrorCountEqualTo(Long value) {
            addCriterion("ERROR_COUNT =", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountNotEqualTo(Long value) {
            addCriterion("ERROR_COUNT <>", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountGreaterThan(Long value) {
            addCriterion("ERROR_COUNT >", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountGreaterThanOrEqualTo(Long value) {
            addCriterion("ERROR_COUNT >=", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountLessThan(Long value) {
            addCriterion("ERROR_COUNT <", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountLessThanOrEqualTo(Long value) {
            addCriterion("ERROR_COUNT <=", value, "errorCount");
            return this;
        }

        public Criteria andErrorCountIn(List<Long> values) {
            addCriterion("ERROR_COUNT in", values, "errorCount");
            return this;
        }

        public Criteria andErrorCountNotIn(List<Long> values) {
            addCriterion("ERROR_COUNT not in", values, "errorCount");
            return this;
        }

        public Criteria andErrorCountBetween(Long value1, Long value2) {
            addCriterion("ERROR_COUNT between", value1, value2, "errorCount");
            return this;
        }

        public Criteria andErrorCountNotBetween(Long value1, Long value2) {
            addCriterion("ERROR_COUNT not between", value1, value2, "errorCount");
            return this;
        }

        public Criteria andViewCountIsNull() {
            addCriterion("VIEW_COUNT is null");
            return this;
        }

        public Criteria andViewCountIsNotNull() {
            addCriterion("VIEW_COUNT is not null");
            return this;
        }

        public Criteria andViewCountEqualTo(Long value) {
            addCriterion("VIEW_COUNT =", value, "viewCount");
            return this;
        }

        public Criteria andViewCountNotEqualTo(Long value) {
            addCriterion("VIEW_COUNT <>", value, "viewCount");
            return this;
        }

        public Criteria andViewCountGreaterThan(Long value) {
            addCriterion("VIEW_COUNT >", value, "viewCount");
            return this;
        }

        public Criteria andViewCountGreaterThanOrEqualTo(Long value) {
            addCriterion("VIEW_COUNT >=", value, "viewCount");
            return this;
        }

        public Criteria andViewCountLessThan(Long value) {
            addCriterion("VIEW_COUNT <", value, "viewCount");
            return this;
        }

        public Criteria andViewCountLessThanOrEqualTo(Long value) {
            addCriterion("VIEW_COUNT <=", value, "viewCount");
            return this;
        }

        public Criteria andViewCountIn(List<Long> values) {
            addCriterion("VIEW_COUNT in", values, "viewCount");
            return this;
        }

        public Criteria andViewCountNotIn(List<Long> values) {
            addCriterion("VIEW_COUNT not in", values, "viewCount");
            return this;
        }

        public Criteria andViewCountBetween(Long value1, Long value2) {
            addCriterion("VIEW_COUNT between", value1, value2, "viewCount");
            return this;
        }

        public Criteria andViewCountNotBetween(Long value1, Long value2) {
            addCriterion("VIEW_COUNT not between", value1, value2, "viewCount");
            return this;
        }
    }
}