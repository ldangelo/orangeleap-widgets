<?xml version="1.0" encoding="UTF-8"?>
<beans
             xmlns="http://www.springframework.org/schema/beans"
			 xmlns:sec="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

  <bean id="propertyConfigurer"
	class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
	<value>classpath:webtools.properties</value>
      </list>
    </property>
  </bean>

    <!-- Enable usage of the @Secured annotation, although not thinking we're using it -->
	<sec:global-method-security secured-annotations="enabled"/>

    <!-- alias to the internal authenticationManager so it can be referenced in bean definitions -->
    <sec:authentication-manager alias="authenticationManager"/>

	<sec:http auto-config="true">
		<sec:intercept-url pattern='/login.jsp' access='IS_AUTHENTICATED_ANONYMOUSLY'/>
		<sec:intercept-url pattern='/test.html' access='IS_AUTHENTICATED_ANONYMOUSLY'/>
		<sec:intercept-url pattern='/includes/*' access='IS_AUTHENTICATED_ANONYMOUSLY'/>
		<sec:intercept-url pattern='/logoutSuccess*' access='IS_AUTHENTICATED_ANONYMOUSLY'/>
		<sec:intercept-url pattern='/css/**' filters='none'/>
		<sec:intercept-url pattern='/js/**' filters='none'/>
		<sec:intercept-url pattern='/js/jquery/**' filters='none'/>
		<sec:intercept-url pattern='/decorators/**' filters='none'/>
		<sec:intercept-url pattern='/customEntity.ajax*' filters='none'/>
		<sec:intercept-url pattern='/widget.ajax*' filters='none'/>
		<sec:intercept-url pattern='/customEntityList.json*' filters='none'/>
		<sec:intercept-url pattern='/picklistItems.json' access='IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER'/>
<!-- 		<sec:intercept-url pattern='/loginwidget.ajax*' filters='none'/> -->
		<sec:intercept-url pattern='/giftHistory.json*' filters='none'/>
		<sec:intercept-url pattern='/images/**' access='IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER'/>
		<sec:intercept-url pattern='/dwr/**' filters='none'/>
		<sec:intercept-url pattern='/**' access='ROLE_USER'/>
		<sec:form-login login-page='/login.jsp'
			default-target-url='/index.jsp'
			login-processing-url='/loginProcess'
			authentication-failure-url="/login.jsp?login_error=1" always-use-default-target="true"/>
		<sec:logout logout-url="/logout" logout-success-url="/" />
	</sec:http>


	<!-- OrangeLeap ordered list of providers to try    -->
	<bean id="orangeLeapAuthenticationProvider" class="com.orangeleap.common.security.OrangeLeapAuthenticationProvider">
     <sec:custom-authentication-provider/>
     <property name="providerList" >
     	<list>
        	<ref bean="ldapAuthenticationProvider"/>
     	</list>
     </property>
    </bean>


    <!-- General LDAP -->
    <bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="ldap://${ldap.host}:${ldap.port}/${ldap.root}"/>
        <property name="userDn" value="${ldap.userDn}"/>
        <property name="password" value="${ldap.password}"/>
    </bean>
    <bean  id="orangeLeapLdapAuthoritiesPopulator" class="com.orangeleap.common.security.OrangeLeapLdapAuthoritiesPopulator">
      <constructor-arg ref="contextSource"/>
      <constructor-arg value="ou=roles"/>
      <property name="searchSubtree" value="true"/>
    </bean>
    <bean id="orangeLeapUserSearch" class="com.orangeleap.common.security.OrangeLeapLdapUserSearch">
        <constructor-arg value="(uid={0})"/>
        <constructor-arg ref="contextSource"/>
    </bean>
    <!-- Ensure passwords are encoded with a hash algorithm (SHA-1 in this case) -->
    <bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder"/>
    <!-- Beans that make use of the LDAP ContextSource -->
    <bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
    	<constructor-arg ref="contextSource"/>
	</bean>

    <!-- End general LDAP -->

	<bean id="ldapAuthenticationProvider" class="org.springframework.security.providers.ldap.LdapAuthenticationProvider">
<!-- 	<sec:custom-after-invocation-provider/> -->
	<constructor-arg>
       <bean class="com.orangeleap.common.security.OrangeLeapBindAuthenticator">
           <constructor-arg ref="contextSource"/>
	       <property name="userSearch" ref="orangeLeapUserSearch"/>
       </bean>
     </constructor-arg>
     <constructor-arg>
        <ref bean="orangeLeapLdapAuthoritiesPopulator" />
     </constructor-arg>
    </bean>

    <bean id="userDetailsService" class="org.springframework.security.userdetails.ldap.LdapUserDetailsService">
        <constructor-arg ref="orangeLeapUserSearch"/>
        <constructor-arg ref="orangeLeapLdapAuthoritiesPopulator"/>
    </bean>


</beans>
